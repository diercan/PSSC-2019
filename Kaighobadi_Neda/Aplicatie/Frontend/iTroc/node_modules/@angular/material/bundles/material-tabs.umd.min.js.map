{"version":3,"file":"material-tabs.umd.min.js","sources":["../../src/material/tabs/tab-header.ts","../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/material/tabs/tabs-module.ts","../../node_modules/tslib/tslib.es6.js","../../src/material/tabs/ink-bar.ts","../../src/material/tabs/tab-content.ts","../../src/material/tabs/tab-label.ts","../../src/material/tabs/tab.ts","../../src/material/tabs/tabs-animations.ts","../../src/material/tabs/tab-body.ts","../../src/material/tabs/tab-group.ts","../../src/material/tabs/tab-label-wrapper.ts","../../src/material/tabs/paginated-tab-header.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-header-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-nav-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              @Optional() platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator', {static: false}) _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator', {static: false}) _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    @Optional() platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-link-base'\n})\n// tslint:disable-next-line:class-name\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements OnDestroy, CanDisable,\n  CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n\n    _focusMonitor.monitor(elementRef);\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal, _MatTabBodyBase} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup, _MatTabGroupBase} from './tab-group';\nimport {MatTabHeader, _MatTabHeaderBase} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav, _MatTabNavBase, _MatTabLinkBase} from './tab-nav-bar/tab-nav-bar';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n\n    // TODO(crisbeto): these can be removed once they're turned into selector-less directives.\n    MatPaginatedTabHeader as any,\n    _MatTabGroupBase as any,\n    _MatTabNavBase as any,\n    _MatTabBodyBase as any,\n    _MatTabHeaderBase as any,\n    _MatTabLinkBase as any,\n  ],\n})\nexport class MatTabsModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({selector: '[matTabContent]'})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MatTabContent} from './tab-content';\nimport {MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MatTabLabel, {static: false}) templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MatTabContent, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody) {\n      super(componentFactoryResolver, viewContainerRef);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-body-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin();\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && this.origin <= 0) || (dir == 'rtl' && this.origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective, {static: false}) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, coerceNumberProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  Optional,\n  Inject,\n  InjectionToken,\n  Directive,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {merge, Subscription} from 'rxjs';\nimport {MatTab} from './tab';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-tab-group-base'\n})\n// tslint:disable-next-line:class-name\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n  abstract _tabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._subscribeToTabLabels();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  ngOnDestroy() {\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color', 'disableRipple'],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab) _tabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper', {static: false}) _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader', {static: false}) _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {END, ENTER, HOME, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive({\n  // TODO(crisbeto): this selector can be removed when we update to Angular 9.0.\n  selector: 'do-not-use-abstract-mat-paginated-tab-header'\n})\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItemIndex(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withWrap();\n\n    this._keyManager.updateActiveItem(0);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      realign();\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case HOME:\n        this._keyManager.setFirstItemActive();\n        event.preventDefault();\n        break;\n      case END:\n        this._keyManager.setLastItemActive();\n        event.preventDefault();\n        break;\n      case ENTER:\n      case SPACE:\n        this.selectFocusedIndex.emit(this.focusIndex);\n        this._itemSelected(event);\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) { return; }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    const isEnabled =\n        this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n    if (!isEnabled) {\n      this.scrollDistance = 0;\n    }\n\n    if (isEnabled !== this._showPaginationControls) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._showPaginationControls = isEnabled;\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    // Check if the pagination arrows should be activated.\n    this._disableScrollBefore = this.scrollDistance == 0;\n    this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection) {\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n}\n"],"names":["type","Optional","NgZone","Platform","String","decorators","Inject","args","ANIMATION_MODULE_TYPE","MatTabHeader","propDecorators","_tabListContainer","ViewChild","static","_tabList","_nextPaginator","_previousPaginator","_MatTabNavBase","_super","elementRef","dir","ngZone","changeDetectorRef","viewportRuler","platform","animationMode","_this","call","this","_disableRipple","color","tslib_1.__extends","Object","defineProperty","prototype","_backgroundColor","value","classList","_elementRef","nativeElement","remove","backgroundColor","add","coerceBooleanProperty","_itemSelected","ngAfterContentInit","_items","changes","pipe","startWith","takeUntil","_destroyed","subscribe","updateActiveLink","_element","items","toArray","i","length","active","selectedIndex","_changeDetectorRef","markForCheck","_inkBar","hide","Directive","selector","ElementRef","Directionality","ChangeDetectorRef","ViewportRuler","Input","disableRipple","MatPaginatedTabHeader","MatTabNav","Component","exportAs","inputs","template","styles","host","class","[class.mat-tab-header-pagination-controls-enabled]","[class.mat-tab-header-rtl]","[class.mat-primary]","[class.mat-accent]","[class.mat-warn]","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","MatTabLinkMixinBase","_MatTabLinkMixinBase","mixinTabIndex","mixinDisableRipple","mixinDisabled","_MatTabLinkBase","_tabNavBar","globalRippleOptions","tabIndex","_focusMonitor","parseInt","rippleConfig","animation","enterDuration","exitDuration","monitor","get","_isActive","enumerable","configurable","disabled","undefined","MAT_RIPPLE_GLOBAL_OPTIONS","Attribute","FocusMonitor","MatTabLink","tabNavBar","focusMonitor","_tabLinkRipple","RippleRenderer","setupTriggerEvents","_removeTriggerEvents","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mat-tab-disabled]","[class.mat-tab-label-active]","MatTabsModule","NgModule","imports","CommonModule","MatCommonModule","PortalModule","MatRippleModule","ObserversModule","A11yModule","exports","MatTabGroup","MatTabLabel","MatTab","MatTabContent","declarations","MatInkBar","MatTabLabelWrapper","MatTabBody","MatTabBodyPortal","__extends","d","b","__","constructor","extendStatics","create","_MAT_INK_BAR_POSITIONER_FACTORY","element","left","offsetLeft","width","offsetWidth","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_MAT_INK_BAR_POSITIONER","InjectionToken","providedIn","factory","_ngZone","_inkBarPositioner","_animationMode","alignToElement","show","requestAnimationFrame","runOutsideAngular","_setStyles","style","visibility","positions","inkBar","[class._mat-animation-noopable]","TemplateRef","CdkPortal","MatTabBase","_MatTabMixinBase","_viewContainerRef","textLabel","_contentPortal","_stateChanges","Subject","position","origin","isActive","ngOnChanges","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","_explicitContent","_implicitContent","ariaLabel","ariaLabelledby","matTabsAnimations","translateTab","trigger","state","transform","minHeight","transition","animate","componentFactoryResolver","viewContainerRef","_host","_centeringSub","Subscription","EMPTY","_leavingSub","_beforeCentering","_isCenterPosition","_position","isCentering","hasAttached","attach","_content","_afterLeavingCenter","detach","unsubscribe","ComponentFactoryResolver","ViewContainerRef","forwardRef","CdkPortalOutlet","_MatTabBodyBase","_dir","_dirChangeSubscription","_translateTabComplete","_onCentering","EventEmitter","_onCentered","animationDuration","change","_computePositionAnimationState","distinctUntilChanged","x","y","fromState","toState","event","emit","_positionIndex","_computePositionFromOrigin","_onTranslateTabStarted","clientHeight","_getLayoutDirection","Output","animations","nextId","MatTabChangeEvent","MAT_TABS_CONFIG","MatTabGroupMixinBase","_MatTabGroupMixinBase","mixinColor","_MatTabGroupBase","defaultConfig","_indexToSelect","_tabBodyWrapperHeight","_tabsSubscription","_tabLabelSubscription","_dynamicHeight","_selectedIndex","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","_groupId","coerceNumberProperty","_animationDuration","test","ngAfterContentChecked","indexToSelect","_clampTabIndex","isFirstRun_1","_createChangeEvent","Promise","resolve","then","_tabs","forEach","tab","index","_subscribeToTabLabels","tabs","realignInkBar","_tabHeader","_alignInkBarToSelectedTab","_focusChanged","merge","apply","map","Math","min","max","_getTabLabelId","_getTabContentId","_setTabBodyWrapperHeight","tabHeight","wrapper","_tabBodyWrapper","height","offsetHeight","_removeTabBodyWrapperHeight","_handleClick","tabHeader","focusIndex","_getTabIndex","idx","dynamicHeight","[class.mat-tab-group-dynamic-height]","[class.mat-tab-group-inverted-header]","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","focus","getOffsetLeft","getOffsetWidth","passiveEventListenerOptions","normalizePassiveListenerOptions","passive","_viewportRuler","_platform","_scrollDistance","_selectedIndexChanged","_showPaginationControls","_disableScrollAfter","_disableScrollBefore","_stopScrolling","selectFocusedIndex","indexFocused","fromEvent","_stopInterval","_keyManager","updateActiveItemIndex","ngAfterViewInit","_handlePaginatorPress","dirChange","observableOf","resize","realign","updatePagination","FocusKeyManager","withHorizontalOrientation","withWrap","updateActiveItem","newFocusIndex","_setTabFocus","_tabLabelCount","_scrollToLabel","_checkScrollingControls","_scrollDistanceChanged","_updateTabScrollPosition","_handleKeydown","hasModifierKey","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","onKeydown","_onContentChanges","textContent","_currentTextContent","run","_checkPaginationEnabled","_isValidIndex","setActiveItem","containerEl","scrollLeft","scrollWidth","scrollDistance","translateX","round","TRIDENT","EDGE","_scrollTo","_scrollHeader","direction","viewLength","scrollAmount","_handlePaginatorClick","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","_a","beforeVisiblePos","afterVisiblePos","isEnabled","_getMaxScrollDistance","selectedItem","selectedLabelWrapper","timer","maxScrollDistance","distance","_MatTabHeaderBase","outputs"],"mappings":"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"}