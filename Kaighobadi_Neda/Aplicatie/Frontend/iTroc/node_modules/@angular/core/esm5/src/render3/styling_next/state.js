var _stylingMode = 0;
/**
 * Temporary function used to inform the existing styling algorithm
 * code to delegate all styling instruction calls to the new refactored
 * styling code.
 */
export function runtimeSetStylingMode(mode) {
    _stylingMode = mode;
}
export function runtimeIsNewStylingInUse() {
    return _stylingMode > 0 /* UseOld */;
}
export function runtimeAllowOldStyling() {
    return _stylingMode < 2 /* UseNew */;
}
var _currentSanitizer;
export function setCurrentStyleSanitizer(sanitizer) {
    _currentSanitizer = sanitizer;
}
export function getCurrentStyleSanitizer() {
    return _currentSanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb3JlL3NyYy9yZW5kZXIzL3N0eWxpbmdfbmV4dC9zdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQ0EsSUFBSSxZQUFZLEdBQUcsQ0FBQyxDQUFDO0FBRXJCOzs7O0dBSUc7QUFDSCxNQUFNLFVBQVUscUJBQXFCLENBQUMsSUFBd0I7SUFDNUQsWUFBWSxHQUFHLElBQUksQ0FBQztBQUN0QixDQUFDO0FBRUQsTUFBTSxVQUFVLHdCQUF3QjtJQUN0QyxPQUFPLFlBQVksaUJBQTRCLENBQUM7QUFDbEQsQ0FBQztBQUVELE1BQU0sVUFBVSxzQkFBc0I7SUFDcEMsT0FBTyxZQUFZLGlCQUE0QixDQUFDO0FBQ2xELENBQUM7QUFFRCxJQUFJLGlCQUFpRCxDQUFDO0FBQ3RELE1BQU0sVUFBVSx3QkFBd0IsQ0FBQyxTQUE2QztJQUNwRixpQkFBaUIsR0FBRyxTQUFTLENBQUM7QUFDaEMsQ0FBQztBQUVELE1BQU0sVUFBVSx3QkFBd0I7SUFDdEMsT0FBTyxpQkFBaUIsQ0FBQztBQUMzQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qIEBsaWNlbnNlXG4qIENvcHlyaWdodCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuKlxuKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4qL1xuaW1wb3J0IHtTYW5pdGl6ZXJ9IGZyb20gJy4uLy4uL3Nhbml0aXphdGlvbi9zZWN1cml0eSc7XG5pbXBvcnQge1N0eWxlU2FuaXRpemVGbn0gZnJvbSAnLi4vLi4vc2FuaXRpemF0aW9uL3N0eWxlX3Nhbml0aXplcic7XG5cbi8qKlxuICogLS0tLS0tLS1cbiAqXG4gKiBUaGlzIGZpbGUgY29udGFpbnMgdGVtcG9yYXJ5IGNvZGUgdG8gaW5jb3Jwb3JhdGUgdGhlIG5ldyBzdHlsaW5nIHJlZmFjdG9yXG4gKiBjb2RlIHRvIHdvcmsgYWxvbmdzaWRlIHRoZSBleGlzdGluZyBpbnN0cnVjdGlvbiBzZXQuXG4gKlxuICogVGhpcyBmaWxlIHdpbGwgYmUgcmVtb3ZlZCBvbmNlIGBzZWxlY3QobilgIGlzIGZ1bGx5IGZ1bmN0aW9uYWwgKG9uY2VcbiAqIGl0IGlzIGFibGUgdG8gZXZhbHVhdGUgaG9zdCBiaW5kaW5ncyBpbiBzeW5jIGVsZW1lbnQtYnktZWxlbWVudFxuICogd2l0aCB0ZW1wbGF0ZSBjb2RlKS5cbiAqXG4gKiAtLS0tLS0tLVxuICovXG5cbi8qKlxuICogQSB0ZW1wb3JhcnkgZW51bSBvZiBzdGF0ZXMgdGhhdCBpbmZvcm0gdGhlIGNvcmUgd2hldGhlciBvciBub3RcbiAqIHRvIGRlZmVyIGFsbCBzdHlsaW5nIGluc3RydWN0aW9uIGNhbGxzIHRvIHRoZSBvbGQgb3IgbmV3XG4gKiBzdHlsaW5nIGltcGxlbWVudGF0aW9uLlxuICovXG5leHBvcnQgY29uc3QgZW51bSBSdW50aW1lU3R5bGluZ01vZGUge1xuICBVc2VPbGQgPSAwLFxuICBVc2VCb3RoT2xkQW5kTmV3ID0gMSxcbiAgVXNlTmV3ID0gMixcbn1cblxubGV0IF9zdHlsaW5nTW9kZSA9IDA7XG5cbi8qKlxuICogVGVtcG9yYXJ5IGZ1bmN0aW9uIHVzZWQgdG8gaW5mb3JtIHRoZSBleGlzdGluZyBzdHlsaW5nIGFsZ29yaXRobVxuICogY29kZSB0byBkZWxlZ2F0ZSBhbGwgc3R5bGluZyBpbnN0cnVjdGlvbiBjYWxscyB0byB0aGUgbmV3IHJlZmFjdG9yZWRcbiAqIHN0eWxpbmcgY29kZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJ1bnRpbWVTZXRTdHlsaW5nTW9kZShtb2RlOiBSdW50aW1lU3R5bGluZ01vZGUpIHtcbiAgX3N0eWxpbmdNb2RlID0gbW9kZTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJ1bnRpbWVJc05ld1N0eWxpbmdJblVzZSgpIHtcbiAgcmV0dXJuIF9zdHlsaW5nTW9kZSA+IFJ1bnRpbWVTdHlsaW5nTW9kZS5Vc2VPbGQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBydW50aW1lQWxsb3dPbGRTdHlsaW5nKCkge1xuICByZXR1cm4gX3N0eWxpbmdNb2RlIDwgUnVudGltZVN0eWxpbmdNb2RlLlVzZU5ldztcbn1cblxubGV0IF9jdXJyZW50U2FuaXRpemVyOiBTYW5pdGl6ZXJ8U3R5bGVTYW5pdGl6ZUZufG51bGw7XG5leHBvcnQgZnVuY3Rpb24gc2V0Q3VycmVudFN0eWxlU2FuaXRpemVyKHNhbml0aXplcjogU2FuaXRpemVyIHwgU3R5bGVTYW5pdGl6ZUZuIHwgbnVsbCkge1xuICBfY3VycmVudFNhbml0aXplciA9IHNhbml0aXplcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEN1cnJlbnRTdHlsZVNhbml0aXplcigpIHtcbiAgcmV0dXJuIF9jdXJyZW50U2FuaXRpemVyO1xufVxuIl19