// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeTest.Data;

namespace WeTest.Migrations
{
    [DbContext(typeof(WeTestContext))]
    [Migration("20200103175616_OptionalRelationTesterId")]
    partial class OptionalRelationTesterId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeTest.Models.Test", b =>
                {
                    b.Property<string>("TestId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Functionality")
                        .HasColumnType("int");

                    b.Property<string>("TestTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TesterId")
                        .HasColumnType("int");

                    b.Property<string>("TesterId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TestId");

                    b.HasIndex("TesterId1");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("WeTest.Models.Tester", b =>
                {
                    b.Property<string>("TesterId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TesterId");

                    b.ToTable("Tester");
                });

            modelBuilder.Entity("WeTest.Models.Test", b =>
                {
                    b.HasOne("WeTest.Models.Tester", "Tester")
                        .WithMany("Tests")
                        .HasForeignKey("TesterId1");
                });
#pragma warning restore 612, 618
        }
    }
}
